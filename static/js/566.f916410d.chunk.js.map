{"version":3,"file":"static/js/566.f916410d.chunk.js","mappings":"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","sources":["views/ChatGpt/store.ts","views/ChatGpt/Chat/api.ts","views/ChatGpt/styled.ts","../node_modules/.pnpm/@ant-design+icons-svg@4.2.1/node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/.pnpm/@ant-design+icons@5.0.1_react-dom@18.2.0_react@18.2.0/node_modules/@ant-design/icons/es/icons/UserOutlined.js","views/ChatGpt/Chat/Bubble.tsx","views/ChatGpt/Chat/MsgInput.tsx","views/ChatGpt/Chat/index.tsx","views/ChatGpt/History/Label.tsx","views/ChatGpt/History/index.tsx","../node_modules/.pnpm/@ant-design+icons-svg@4.2.1/node_modules/@ant-design/icons-svg/es/asn/RedoOutlined.js","../node_modules/.pnpm/@ant-design+icons@5.0.1_react-dom@18.2.0_react@18.2.0/node_modules/@ant-design/icons/es/icons/RedoOutlined.js","views/ChatGpt/ToolBar/index.tsx","views/ChatGpt/index.tsx","../node_modules/.pnpm/@ant-design+icons@5.0.1_react-dom@18.2.0_react@18.2.0/node_modules/@ant-design/icons/es/icons/CheckOutlined.js","../node_modules/.pnpm/@ant-design+icons@5.0.1_react-dom@18.2.0_react@18.2.0/node_modules/@ant-design/icons/es/icons/CloseOutlined.js"],"sourcesContent":["import { sendApi } from '@/views/ChatGpt/Chat/api';\r\nimport { time } from 'hyl-utils';\r\nimport { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\n\r\ntype msgType = {\r\n  content: string;\r\n  role: 'user' | 'assistant';\r\n};\r\n\r\ntype DialogType = {\r\n  time: string;\r\n  messages: msgType[];\r\n  current: boolean;\r\n  id: string;\r\n  top: boolean;\r\n};\r\n\r\ntype StoreTypes = {\r\n  dialogList: DialogType[];\r\n  value: string;\r\n  disabled: boolean;\r\n  controller: AbortController;\r\n  autoValue: string;\r\n  autoScroll: boolean;\r\n  fullScreen: boolean;\r\n  createDialog: () => void;\r\n  deleteDialog: (id: string) => void;\r\n  updateDialog: (newItem: (item: DialogType) => any) => void;\r\n  setMessages: (msgs: msgType[]) => void;\r\n  sendMessage: (msg?: string) => void;\r\n};\r\n\r\nconst store = persist<StoreTypes, [], [], Pick<StoreTypes, 'dialogList'>>(\r\n  (set, get) => ({\r\n    //对话列表数据\r\n    dialogList: [\r\n      {\r\n        time: time.parse(new Date()),\r\n        messages: [],\r\n        current: true,\r\n        id: 'first',\r\n        top: true,\r\n      },\r\n    ],\r\n    //输入框值\r\n    value: '',\r\n    //输入框禁用\r\n    disabled: false,\r\n    //取消请求的实例\r\n    controller: new AbortController(),\r\n    //自动发送的消息\r\n    autoValue: '',\r\n    autoScroll: true,\r\n    fullScreen: false,\r\n\r\n    createDialog() {\r\n      const { dialogList, controller, disabled } = get();\r\n\r\n      const newDialogList = [\r\n        {\r\n          time: time.parse(new Date()),\r\n          messages: [],\r\n          current: true,\r\n          id: `${Math.random()}`,\r\n          top: true,\r\n        },\r\n        ...dialogList.map(item => ({\r\n          ...item,\r\n          current: false,\r\n          top: false,\r\n        })),\r\n      ];\r\n      if (disabled) {\r\n        //如果正在接收流，切断\r\n        controller.abort();\r\n        return set({ dialogList: newDialogList, disabled: false });\r\n      }\r\n      return set({ dialogList: newDialogList });\r\n    },\r\n\r\n    updateDialog(newItem) {\r\n      set({\r\n        dialogList: get().dialogList.map(item => ({\r\n          ...item,\r\n          ...newItem(item),\r\n        })),\r\n      });\r\n    },\r\n\r\n    deleteDialog(id) {\r\n      const newDialogList = get().dialogList.filter(item => item.id !== id);\r\n      if (newDialogList.every(item => !item.current)) {\r\n        newDialogList[0].current = true;\r\n      }\r\n      set({ dialogList: newDialogList });\r\n    },\r\n\r\n    setMessages(msgs) {\r\n      get().updateDialog(item => ({\r\n        messages: item.current ? msgs : item.messages,\r\n      }));\r\n    },\r\n\r\n    sendMessage(msg = get().value) {\r\n      if (!msg.trim()) return;\r\n      const { setMessages, dialogList } = get();\r\n      const { messages } = dialogList.find(item => item.current)!;\r\n      const newController = new AbortController();\r\n\r\n      set({ disabled: true, controller: newController });\r\n\r\n      setMessages([...messages, { content: msg, role: 'user' }]);\r\n\r\n      setTimeout(() => {\r\n        setMessages([\r\n          ...messages,\r\n          { content: msg, role: 'user' },\r\n          { content: 'ai思索中...', role: 'assistant' },\r\n        ]);\r\n      }, 700);\r\n\r\n      sendApi(\r\n        {\r\n          messages: [...messages, { content: msg, role: 'user' }],\r\n        },\r\n        newController\r\n      ).then(async ({ status, body }) => {\r\n        if (status === 200) {\r\n          //获取UTF8的解码\r\n          const encode = new TextDecoder('utf-8');\r\n          //获取body的reader\r\n          const reader = body!.getReader();\r\n\r\n          let contents = '';\r\n\r\n          while (true) {\r\n            const { done, value } = await reader.read();\r\n\r\n            if (done) {\r\n              set({ disabled: false, value: '' });\r\n\r\n              break;\r\n            }\r\n            // 解码内容\r\n            const text = encode.decode(value);\r\n\r\n            //切成消息数组，并过滤掉空数据\r\n            const datas = text.split('data: ').filter(item => item);\r\n\r\n            // 遍历消息\r\n            datas.forEach(item => {\r\n              try {\r\n                const c = JSON.parse(item);\r\n\r\n                if (c.choices[0].delta.content) {\r\n                  contents += c.choices[0].delta.content;\r\n                }\r\n              } catch (e) {\r\n                // console.log([e, item, text, texts]);\r\n              }\r\n            });\r\n\r\n            setMessages([\r\n              ...messages,\r\n              { content: msg, role: 'user' },\r\n              { content: contents, role: 'assistant' },\r\n            ]);\r\n          }\r\n        } else {\r\n          setMessages([\r\n            ...messages,\r\n            { content: msg, role: 'user' },\r\n            { content: '', role: 'assistant' },\r\n          ]);\r\n          set({ disabled: false });\r\n        }\r\n      });\r\n    },\r\n  }),\r\n  {\r\n    name: 'chatgpt',\r\n    partialize: state => ({ dialogList: state.dialogList }),\r\n  }\r\n);\r\n\r\nexport default create(store);\r\n","export const sendApi = (data, controller) => {\r\n  return fetch(\"/api/all/chatgpt\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    signal: controller.signal,\r\n    body: JSON.stringify(data),\r\n  });\r\n};\r\n","import { Space } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ChatGptWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const ChatGptFullScreenWrapper = styled(ChatGptWrapper)`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: #fff;\r\n  z-index: 999999;\r\n  padding: 20px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ChatWrapper = styled.div`\r\n  width: calc(100% - 280px - 50px);\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const HistoryWrapper = styled.div`\r\n  width: 280px;\r\n  background-color: #001529;\r\n  text-align: center;\r\n  padding-top: 20px;\r\n  position: relative;\r\n  .refresh {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 25px;\r\n  }\r\n`;\r\n\r\nexport const ToolBarWrapper = styled(Space)`\r\n  width: 50px;\r\n  text-align: right;\r\n`;\r\n\r\nexport const HistoryList = styled.ul`\r\n  background-color: #001529;\r\n  text-align: left;\r\n  padding: 20px 10px 0;\r\n  color: #fff;\r\n  height: 68vh;\r\n  overflow: auto;\r\n  margin-top: 15px;\r\n`;\r\n\r\nexport const LabelWrapper = styled.li<{ active: boolean }>`\r\n  position: relative;\r\n  line-height: 40px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  border-radius: 10px;\r\n  padding: 0 10px;\r\n  margin-bottom: 5px;\r\n  background-color: ${(props) =>\r\n    props.active ? \"var(--ant-primary-color)\" : \"transparent\"};\r\n\r\n  .name {\r\n    flex: 1;\r\n    overflow: hidden;\r\n    margin: 0 10px;\r\n    margin-right: 0;\r\n    white-space: nowrap;\r\n    position: relative;\r\n    .zhao {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      width: 30px;\r\n      height: 100%;\r\n\r\n      background-image: linear-gradient(\r\n        to left,\r\n        var(--ant-primary-color),\r\n        transparent\r\n      );\r\n    }\r\n  }\r\n  .action {\r\n    width: 60px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    position: relative;\r\n    top: 1px;\r\n    color: #eee;\r\n  }\r\n  .ico {\r\n    font-size: 18px !important;\r\n    &:hover {\r\n      color: var(--ant-primary-4);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  padding: 10px;\r\n  padding-bottom: 0;\r\n  padding-right: 0;\r\n  text-align: right;\r\n  .sendBtn {\r\n    margin-top: 5px;\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nexport const MessagesWrapper = styled.div<{ fullScreen: boolean }>`\r\n  overflow-y: scroll;\r\n  padding: 20px;\r\n\r\n  ${(props) => (props.fullScreen ? \"flex: 1;\" : \"height: 60vh;\")}\r\n`;\r\n\r\nexport const MessageBubble = styled.div<{ isUserMessage: boolean }>`\r\n  display: block;\r\n  padding-left: 55px;\r\n  position: relative;\r\n  margin-bottom: 10px;\r\n  .content {\r\n    display: inline-block;\r\n    max-width: 80%;\r\n    margin-bottom: 10px;\r\n    padding: 10px 15px;\r\n    border-radius: 10px;\r\n    background-color: ${({ isUserMessage }) =>\r\n      isUserMessage ? \"var(--ant-primary-color)\" : \"#e6e6e6\"};\r\n    color: ${({ isUserMessage }) => (isUserMessage ? \"#fff\" : \"#000\")};\r\n    align-self: ${({ isUserMessage }) =>\r\n      isUserMessage ? \"flex-end\" : \"flex-start\"};\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\r\n    position: relative;\r\n    overflow-x: auto;\r\n    ::before {\r\n      position: absolute;\r\n      left: -19px;\r\n      top: 6px;\r\n      height: 0;\r\n      width: 0;\r\n      content: \"\";\r\n      border: 10px solid rgba(255, 255, 255, 0);\r\n      border-top: 6px solid rgba(255, 255, 255, 0);\r\n      border-bottom: 6px solid rgba(255, 255, 255, 0);\r\n      border-right-color: ${({ isUserMessage }) =>\r\n        isUserMessage ? \"var(--ant-primary-color)\" : \"#e6e6e6\"};\r\n    }\r\n\r\n    .userContent {\r\n      white-space: pre-wrap;\r\n    }\r\n  }\r\n  .avatar {\r\n    position: absolute;\r\n    left: 0;\r\n    border: 1px solid #eee;\r\n  }\r\n`;\r\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\nUserOutlined.displayName = 'UserOutlined';\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","import {Avatar, Button} from \"antd\";\r\nimport {Markdown} from \"@/components\";\r\nimport aiImg from \"@/assets/img/avatar/ai.jpg\";\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\nimport {MessageBubble} from \"../styled\";\r\nimport useStore from '../store'\r\n\r\nfunction Bubble({isUser, content}) {\r\n    const {sendMessage} = useStore()\r\n\r\n    return (\r\n        <MessageBubble isUserMessage={isUser}>\r\n            {isUser ? (\r\n                <Avatar icon={<UserOutlined/>} className=\"avatar\" size=\"large\"/>\r\n            ) : (\r\n                <Avatar src={aiImg} className=\"avatar\" size=\"large\"/>\r\n            )}\r\n            <div className=\"content\">\r\n                {content ? (isUser ? (<div className=\"userContent\">{content}</div>) : (<Markdown content={content}/>))\r\n                    : <Button onClick={() => sendMessage()}>我的cpu不小心干烧了...点击重新提问</Button>}\r\n            </div>\r\n        </MessageBubble>\r\n    );\r\n}\r\n\r\nexport default Bubble;\r\n","import {InputWrapper} from \"../styled\";\r\nimport {Button, Input} from \"antd\";\r\nimport useStore from \"../store\";\r\n\r\nconst {setState} = useStore;\r\n\r\nfunction MsgInput() {\r\n    const {value, disabled, controller, sendMessage} = useStore();\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.keyCode === 13 && e.ctrlKey) {\r\n            setState({value: value + \"\\n\"});\r\n        }\r\n        if (e.keyCode === 13) {\r\n            return sendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <InputWrapper>\r\n            <Input.TextArea\r\n                value={value}\r\n                disabled={disabled}\r\n                onChange={(e) => setState({value: e.target.value})}\r\n                placeholder=\"你想对Ai说什么？（支持回车发送，ctrl+回车换行）\"\r\n                autoSize={{minRows: 3, maxRows: 6}}\r\n                onKeyDown={handleKeyDown}\r\n            />\r\n            {disabled && (\r\n                <Button\r\n                    className=\"sendBtn\"\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                        controller.abort();\r\n                        setState({disabled: false});\r\n                    }}\r\n                >\r\n                    终止\r\n                </Button>\r\n            )}\r\n            <Button\r\n                className=\"sendBtn\"\r\n                type=\"primary\"\r\n                disabled={disabled}\r\n                onClick={() => sendMessage()}\r\n            >\r\n                发送\r\n            </Button>\r\n        </InputWrapper>\r\n    );\r\n}\r\n\r\nexport default MsgInput;\r\n","import { useBoolean, useMount } from '@/hooks';\r\nimport { url } from 'hyl-utils';\r\nimport { useEffect, useRef } from 'react';\r\nimport useStore from '../store';\r\nimport { ChatWrapper, MessagesWrapper } from '../styled';\r\nimport Bubble from './Bubble';\r\nimport MsgInput from './MsgInput';\r\n\r\nconst { setState } = useStore;\r\n\r\nconst tip = `\r\n  您好，我是chatgpt。\\n\r\n  我是一种由OpenAI训练的大型语言模型。我的原理是基于Transformer架构，通过预训练大量文本数据来学习如何生成人类可读的文本，然后通过接受输入并生成输出来实现对话。\\n\r\n  我的用途非常广泛，可以用于自然语言处理（NLP）任务，如对话生成、问答系统、文本生成、写代码等。\r\n`;\r\n\r\nfunction Chat() {\r\n  const messages = useStore(\r\n    state => state.dialogList.find(item => item.current)!.messages\r\n  );\r\n  const { autoValue, autoScroll, createDialog, fullScreen, sendMessage } =\r\n    useStore();\r\n\r\n  const [visible, onVisible] = useBoolean(false);\r\n\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n  useMount(() => {\r\n    const params = url.getParams();\r\n    if (params.q) {\r\n      setState({ autoValue: params.q });\r\n      createDialog();\r\n    }\r\n\r\n    onVisible();\r\n\r\n    return () => setState({ autoValue: '' });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (autoScroll) {\r\n      const element = wrapperRef.current!;\r\n      element.scrollTo({\r\n        top: element.scrollHeight - element.clientHeight,\r\n        behavior: 'smooth', // 平滑滚动\r\n      });\r\n    }\r\n  }, [messages, visible]);\r\n\r\n  useEffect(() => {\r\n    if (autoValue) {\r\n      sendMessage(autoValue);\r\n    }\r\n  }, [autoValue]);\r\n\r\n  return (\r\n    <ChatWrapper>\r\n      <MessagesWrapper fullScreen={fullScreen} ref={wrapperRef}>\r\n        <Bubble isUser={false} content={tip} />\r\n        {visible &&\r\n          messages.map((message, index) => (\r\n            <Bubble\r\n              key={message.content + index}\r\n              isUser={index % 2 === 0}\r\n              content={message.content}\r\n            />\r\n          ))}\r\n      </MessagesWrapper>\r\n\r\n      <MsgInput />\r\n    </ChatWrapper>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import { useBoolean } from \"@/hooks\";\r\nimport { LabelWrapper } from \"../styled\";\r\nimport { Icon } from \"@/components\";\r\nimport { memo, useRef, useState } from \"react\";\r\nimport { Input, InputRef } from \"antd\";\r\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\r\nimport useStore from \"../store\";\r\nimport { flushSync } from \"react-dom\";\r\n\r\nfunction HistoryLabel({ id, current, time }) {\r\n  const { deleteDialog, updateDialog } = useStore();\r\n\r\n  const [editName, on, off] = useBoolean(false);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const inputRef = useRef<InputRef>(null);\r\n\r\n  const onSaveName = () => {\r\n    if (value) {\r\n      updateDialog((item) => ({\r\n        time: item.id === id ? value : item.time,\r\n      }));\r\n      off();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LabelWrapper\r\n      onClick={() => updateDialog((msg) => ({ current: msg.id === id }))}\r\n      active={current}\r\n    >\r\n      <div className=\"icon\">\r\n        <Icon type=\"icon-changyonghuifu\" size={16} />\r\n      </div>\r\n      <div className=\"name\">\r\n        {editName ? (\r\n          <Input\r\n            ref={inputRef}\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n            onPressEnter={onSaveName}\r\n          />\r\n        ) : (\r\n          <span>{time}</span>\r\n        )}\r\n        {current && !editName && <div className=\"zhao\"></div>}\r\n      </div>\r\n      {current && (\r\n        <ul className=\"action\">\r\n          {editName ? (\r\n            <>\r\n              <li>\r\n                <CheckOutlined className=\"ico\" onClick={onSaveName} />\r\n              </li>\r\n              <li>\r\n                <CloseOutlined\r\n                  className=\"ico\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    off();\r\n                  }}\r\n                />\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <li>\r\n                <Icon\r\n                  className=\"ico\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    flushSync(() => {\r\n                      on();\r\n                      setValue(time);\r\n                    });\r\n                    inputRef.current!.focus({\r\n                      cursor: \"end\",\r\n                    });\r\n                  }}\r\n                  type=\"icon-zhongmingming1\"\r\n                />\r\n              </li>\r\n              <li>\r\n                <Icon\r\n                  className=\"ico\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    updateDialog((msg) => ({ top: msg.id === id }));\r\n                  }}\r\n                  type=\"icon-zhiding_o\"\r\n                />\r\n              </li>\r\n              <li>\r\n                <Icon\r\n                  className=\"ico\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    deleteDialog(id);\r\n                  }}\r\n                  type=\"icon-shanchu\"\r\n                />\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      )}\r\n    </LabelWrapper>\r\n  );\r\n}\r\n\r\nexport default memo(HistoryLabel);\r\n","import { HistoryList, HistoryWrapper } from \"../styled\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport { PlusOutlined, RedoOutlined } from \"@ant-design/icons\";\r\nimport { memo } from \"react\";\r\nimport Label from \"./Label\";\r\nimport useStore from \"../store\";\r\n\r\nfunction History() {\r\n  const dialogList = useStore((state) =>\r\n    state.dialogList.sort((msg) => (msg.top ? -1 : 1))\r\n  );\r\n  const { createDialog } = useStore();\r\n\r\n  return (\r\n    <HistoryWrapper>\r\n      <Button icon={<PlusOutlined />} onClick={createDialog}>\r\n        新建会话\r\n      </Button>\r\n\r\n      <HistoryList>\r\n        {dialogList.map((item) => {\r\n          return <Label key={item.id} {...item} />;\r\n        })}\r\n      </HistoryList>\r\n    </HistoryWrapper>\r\n  );\r\n}\r\n\r\nexport default memo(History);\r\n","// This icon file is generated automatically.\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexport default RedoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RedoOutlinedSvg from \"@ant-design/icons-svg/es/asn/RedoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RedoOutlinedSvg\n  }));\n};\nRedoOutlined.displayName = 'RedoOutlined';\nexport default /*#__PURE__*/React.forwardRef(RedoOutlined);","import { Icon } from '@/components';\r\nimport { RedoOutlined } from '@ant-design/icons';\r\nimport { Button, Tooltip } from 'antd';\r\nimport useStore from '../store';\r\nimport { ToolBarWrapper } from '../styled';\r\n\r\nconst ToolBar = () => {\r\n  const { autoScroll, fullScreen } = useStore();\r\n\r\n  const menu = [\r\n    {\r\n      icon: <Icon type='icon-fangda' />,\r\n      message: '全屏',\r\n      type: fullScreen ? 'primary' : 'default',\r\n      onClick: () => useStore.setState({ fullScreen: !fullScreen }),\r\n    },\r\n    {\r\n      icon: <Icon type='icon-Scroll-Up' />,\r\n      message: '消息自动向上滚动',\r\n      type: autoScroll ? 'primary' : 'default',\r\n      onClick: () => useStore.setState({ autoScroll: !autoScroll }),\r\n    },\r\n    {\r\n      icon: <RedoOutlined />,\r\n      message: '清空所有对话',\r\n      type: 'primary',\r\n      onClick: () => {\r\n        localStorage.removeItem('chatgpt');\r\n\r\n        window.location.reload();\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ToolBarWrapper direction='vertical'>\r\n      {menu.map(({ message, icon, type, onClick }) => (\r\n        <Tooltip\r\n          title={message}\r\n          placement='left'\r\n          getPopupContainer={target => target}\r\n          key={message}\r\n        >\r\n          <Button icon={icon} type={type as any} onClick={onClick} />\r\n        </Tooltip>\r\n      ))}\r\n    </ToolBarWrapper>\r\n  );\r\n};\r\n\r\nexport default ToolBar;\r\n","import { Plate } from '@/components';\r\nimport { useMount } from '@/hooks';\r\nimport { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Chat from './Chat';\r\nimport History from './History';\r\nimport ToolBar from './ToolBar';\r\nimport useStore from './store';\r\nimport { ChatGptFullScreenWrapper, ChatGptWrapper } from './styled';\r\n\r\nfunction ChatGpt() {\r\n  const { fullScreen } = useStore();\r\n\r\n  useMount(() => {\r\n    document.title = `ChatGpt · ${globalConfig.title}`;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (fullScreen) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'visible';\r\n    }\r\n  }, [fullScreen]);\r\n\r\n  if (fullScreen) {\r\n    return ReactDOM.createPortal(\r\n      <ChatGptFullScreenWrapper>\r\n        <History />\r\n        <Chat />\r\n        <ToolBar />\r\n      </ChatGptFullScreenWrapper>,\r\n      document.getElementById('root')!\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Plate title='chatgpt'>\r\n      <ChatGptWrapper>\r\n        <History />\r\n        <Chat />\r\n        <ToolBar />\r\n      </ChatGptWrapper>\r\n    </Plate>\r\n  );\r\n}\r\n\r\nexport default ChatGpt;\r\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);"],"names":["store","persist","set","get","dialogList","time","Date","messages","current","id","top","value","disabled","controller","AbortController","autoValue","autoScroll","fullScreen","createDialog","_get","newDialogList","concat","Math","random","_toConsumableArray","map","item","_objectSpread","abort","updateDialog","newItem","deleteDialog","filter","every","setMessages","msgs","sendMessage","msg","arguments","length","undefined","trim","data","_get2","find","newController","content","role","setTimeout","fetch","method","headers","signal","body","JSON","stringify","then","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","status","encode","reader","contents","_yield$reader$read","done","text","wrap","_context","prev","next","TextDecoder","getReader","read","sent","abrupt","decode","split","forEach","c","parse","choices","delta","e","stop","_x","apply","name","partialize","state","create","ChatGptWrapper","styled","displayName","componentId","ChatGptFullScreenWrapper","withConfig","ChatWrapper","HistoryWrapper","ToolBarWrapper","Space","HistoryList","LabelWrapper","props","active","InputWrapper","MessagesWrapper","MessageBubble","_ref","isUserMessage","_ref4","UserOutlined","ref","React","AntdIcon","icon","UserOutlinedSvg","isUser","useStore","_jsxs","children","_jsx","Avatar","className","size","src","aiImg","Markdown","Button","onClick","setState","_useStore","Input","onChange","target","placeholder","autoSize","minRows","maxRows","onKeyDown","keyCode","ctrlKey","type","_useBoolean","useBoolean","_useBoolean2","_slicedToArray","visible","onVisible","wrapperRef","useRef","useMount","params","url","q","useEffect","element","scrollTo","scrollHeight","clientHeight","behavior","Bubble","message","index","MsgInput","HistoryLabel","editName","on","off","_useState","useState","_useState2","setValue","inputRef","onSaveName","Icon","onPressEnter","_Fragment","CheckOutlined","CloseOutlined","stopPropagation","flushSync","focus","cursor","memo","History","sort","PlusOutlined","Label","RedoOutlined","RedoOutlinedSvg","menu","localStorage","removeItem","window","location","reload","direction","Tooltip","title","placement","getPopupContainer","document","globalConfig","style","overflow","ReactDOM","Chat","ToolBar","getElementById","Plate","CheckOutlinedSvg","CloseOutlinedSvg"],"sourceRoot":""}